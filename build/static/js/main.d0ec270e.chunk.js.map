{"version":3,"sources":["image/dog.png","image/html-5.svg","image/css-3.svg","image/javascript.svg","image/react.svg","image/gatsby.svg","image/python.svg","image/c.svg","image/exampleblog.png","image/portfolio.png","Work.js","Profile.js","Data.js","Blog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Work","props","state","isModalOpen","this","setState","openButton","modal","isPortfolio","Button","onClick","toggleModal","className","src","image","alt","name","skill","description","details","href","url","React","Component","Profile","skillLists","html5","css3","javascript","react","gatsby","python","c","dog","map","Data","WorkLists","exampleblog","portfolio","work","Blog","App","number","content","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0ec270e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.13549ccb.png\";","module.exports = __webpack_public_path__ + \"static/media/html-5.24845c5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/css-3.d3ad67fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/javascript.87711407.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.9a28da9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/gatsby.aec012ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/python.51c2eab2.svg\";","module.exports = __webpack_public_path__ + \"static/media/c.65aa0b06.svg\";","module.exports = __webpack_public_path__ + \"static/media/exampleblog.c5c127ee.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.14a9b280.png\";","import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/button';\n\nclass Work extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isModalOpen: false,\n    }\n  }\n\n  toggleModal(){\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    })\n  }\n\n  render(){\n    let openButton\n    if(this.props.isPortfolio){\n      openButton = (<Button onClick={()=>this.toggleModal()}>詳細</Button>)\n    }\n    let modal\n    if(this.state.isModalOpen){\n      modal = (\n        <div className='modal-back'>\n          <div className='modal-frame'>\n            <img src={this.props.image} alt={this.props.name}/>\n            <div className='modal-description'>\n              <h4>{this.props.name}</h4>\n              <p>使用技術：{this.props.skill}</p>\n              <p>{this.props.description}</p>\n              <p>{this.props.details}</p>\n              <Button><a　href={this.props.url}>サイトへ行く</a></Button>\n              <Button onClick={()=>this.toggleModal()}>閉じる</Button>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className='work-frame'>\n          <div className='work-box'>\n              <img src={this.props.image} alt={this.props.name}/>\n              <div className='work-description'>\n                  <h4>{this.props.name}</h4>\n                  <p>{this.props.description}</p>\n                  {openButton}\n                  {modal}\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React from 'react';\nimport './App.css';\nimport Work from './Work';\nimport dog from './image/dog.png';\nimport html5 from './image/html-5.svg';\nimport css3 from './image/css-3.svg';\nimport javascript from './image/javascript.svg';\nimport react from './image/react.svg';\nimport gatsby from './image/gatsby.svg';\nimport python from './image/python.svg';\nimport c from './image/c.svg';\n\n\nfunction Profile() {\n    const skillLists = [\n        {\n            name:'HTML5',\n            description:'',\n            image:html5,\n        },\n        {\n            name:'CSS3',\n            description:'',\n            image:css3,\n        },\n        {\n            name:'JavaScript',\n            description:'',\n            image:javascript,\n        },\n        {\n            name:'react',\n            description:'',\n            image:react,\n        },\n        {\n            name:'gatsby',\n            description:'',\n            image:gatsby,\n        },\n        {\n            name:'Python',\n            description:'',\n            image:python,\n        },\n        {\n            name:'C',\n            description:'',\n            image:c,\n        },\n    ]\n\n  return (\n    <div className='contents'>\n        <h2>Profile</h2>\n        <div className='wrapper'>\n            <div className='profile'>\n                <div>\n                    <img src={dog} alt='プロフィール写真'/>\n                </div>\n                <div className='myname'>\n                    <p>name：若杉凌大(Wakasugi Ryota)</p>\n                    <p>GitHub：<a href='https://github.com/sugiwa'>sugiwa</a></p>\n                </div>\n            </div>\n        </div>\n        <div className='wrapper'>\n            <h3>Skill</h3>\n            <div className='work-back'>\n            {skillLists.map((skill) => {\n                return(\n                    <Work \n                        name={skill.name}\n                        description={skill.description}\n                        image={skill.image}\n                        isPortfolio={false}                        \n                    />\n                );\n            })}\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport './App.css';\nimport exampleblog from './image/exampleblog.png';\nimport portfolio from './image/portfolio.png';\nimport Work from './Work';\n\nfunction Data() {\n    const WorkLists = [\n        {\n            name:'Example Blog',\n            description:'ReactベースのフレームワークであるGatsbyを用いて作成し、Netlifyへデプロイしました。',\n            image:exampleblog,\n            url:'https://youthful-williams-7f4bf8.netlify.app',\n            details:'Reactでブログを作成するにあたり、フレームワークの候補としてGatsbyかNextが挙がりましたがGatsbyの方が速くGraphQLが使えるとのことなのでこちらを採用しました。',\n            skill:'ReactJS,Gatsby',\n        },\n        {\n            name:'Ryo portfolio',\n            description:'Reactを用いて作成したポートフォリオで、Netlifyにデプロイしました。',\n            image:portfolio,\n            url:'https://distracted-bassi-d1ec6e.netlify.app',\n            details:'ポートフォリオサイトをまだ持っておらず、Reactの技術をより深めたいと思い作成しました。レスポンシブで白を基調としたシンプルなデザインとなるよう意識しました。',\n            skill:'React'\n        },\n    ]\n    return (\n        <div className='contents'>\n            <h2>Works</h2>\n            <div className='wrapper'>\n                <div className='work-back'>\n                    {WorkLists.map((work) => {\n                        return(\n                            <Work \n                                name={work.name}\n                                description={work.description}\n                                image={work.image}\n                                url={work.url}\n                                details={work.details}\n                                skill={work.skill}\n                                isPortfolio={true}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Data;\n","import React from 'react';\nimport './App.css';\n\nfunction Blog() {\n  return (\n    <div className='contents'>\n        <h2>Blog</h2>\n        <div className='wrapper'>\n            <p>準備中です。</p>\n        </div>\n    </div>\n  );\n}\n\nexport default Blog;\n","import React from 'react';\nimport './App.css';\nimport Profile from './Profile';\nimport Data from './Data';\nimport Blog from './Blog';\n\nclass App extends React.Component {\n  constructor(props){\n      super(props);\n      this.state={\n          number:0\n      }\n  }\n  render(){\n      let content;\n      if(this.state.number === 0){\n        content = <Data />\n      }else if(this.state.number === 1){\n        content = <Profile />\n      }else if(this.state.number === 2){\n        content = <Blog />\n      }\n\n      return (\n        <div className='App'>\n          <nav className='menu'>\n            <ul>\n              <li onClick={()=>{this.setState({number:0})}}>Works</li>\n              <li onClick={()=>{this.setState({number:1})}}>About</li>\n              <li onClick={()=>{this.setState({number:2})}}>Blog</li>\n            </ul>\n          </nav>\n          <div className='top-image'>Ryo portfolio</div>\n          <div className='content-width'>\n            {content}\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}